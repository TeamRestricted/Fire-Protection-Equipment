//file:noinspection GroovyAssignabilityCheck

import java.time.Instant
import java.time.temporal.ChronoUnit

buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://maven.parchmentmc.org" }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
        classpath group: "org.parchmentmc", name: "librarian", version: "1.+"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.21"

        classpath "org.spongepowered:mixingradle:0.7.+"
    }
}

System.setProperty("net.minecraftforge.gradle.check.certs", "false")

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.parchmentmc.librarian.forgegradle"
apply plugin: "kotlin"
// 天天连不上，直接放本地拉倒了。
// apply from: 'https://raw.githubusercontent.com/thedarkcolour/KotlinForForge/site/thedarkcolour/kotlinforforge/gradle/kff-3.3.2.gradle'
apply from: './kff-3.3.2.gradle'
apply plugin: "org.spongepowered.mixin"

def modId = "fire_protection_equipment"

version = "1.0"
group = "com.github.teamrestricted"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: "parchment", version: "2022.03.13-1.18.2"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file("run_client")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            mods.create(modId) { it.source sourceSets.main }
        }

        server {
            workingDirectory project.file("run_server")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            mods.create(modId) { it.source sourceSets.main }
        }

        data {
            workingDirectory project.file("run_data")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            mods.create(modId) { it.source sourceSets.main }
            args "--mod", modId, "--existing-mod", modId, "--all", "--output", file("src/generated/resources/")
        }
    }
}

sourceSets.main.resources {
    srcDir "src/generated/resources"
}

repositories {
    maven { url = "https://files.minecraftforge.net/maven" }
    maven { url = "https://maven.parchmentmc.org" }
    maven { url "https://cursemaven.com"; content {includeGroup("curse.maven")  } }
    maven { url = "https://maven.blamejared.com" }
}

dependencies {
    minecraft "net.minecraftforge:forge:1.18.2-40.1.0"

    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

    implementation fg.deobf("curse.maven:jade-324717:3761542")
    implementation fg.deobf("curse.maven:neat-238372:3593906")

    compileOnly("com.blamejared.crafttweaker:CraftTweaker-forge-1.18.2:${project.ctVersion}")
    runtimeOnly(fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-1.18.2:${project.ctVersion}"))
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${modId}",
                "Specification-Vendor"    : "TeamRestricted",
                "Specification-Version"   : "1",
                "Implementation-Title"    : "${modId}",
                "Implementation-Version"  : "${project.version}",
                "Implementation-Vendor"   : "TeamRestricted",
                "Implementation-Timestamp": "${Instant.now().truncatedTo(ChronoUnit.SECONDS)}"
        ])
    }
}

jar.finalizedBy("reobfJar")

mixin {
    config("mixin.fpe.json")
}